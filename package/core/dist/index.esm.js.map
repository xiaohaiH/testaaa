{"version":3,"file":"index.esm.js","sources":["../use/constant.ts","../use/wrapper/index.ts","../use/wrapper/props.ts","../utils/index.ts","../use/assist.ts","../use/plain/index.ts","../use/share.ts","../use/plain/props.ts","../use/tree/index.ts","../use/tree/props.ts"],"sourcesContent":["import { version, type Ref } from 'vue-demi';\n\n/** 判断是否是 2.7.* 版本, 监听生命周期需对该版本做处理 */\nexport const IS_COMPOSITION_VERSION = version.slice(0, 3) === '2.7';\n\n/** 容器注入的 key */\nexport const provideKey = 'condition-wrapper';\n\n/** 容器注入值的类型 */\nexport interface ProvideValue {\n    /**\n     * 是否实时触发\n     */\n    realtime: Ref<boolean | undefined>;\n    /**\n     * 子组件需主动注册组件, 否则不会生效\n     * @param {CommonMethod} config 提供父组件校验, 重置等方法\n     *\n     * @returns {() => void} 取消注册 - 默认会自动取消, 如果是异步任务内注册, 需自己手动取消\n     */\n    register(config: CommonMethod): () => void;\n    /**\n     * 子组件通知父级更新 query 中的值 - 静默修改, 不触发搜索事件\n     * @param {string} field 更新的字段\n     * @param {*} value 更新的值\n     */\n    updateQueryValue(field: string, value: any): void;\n    /**\n     * 子组件内部值发生了变动, 由父级决定是否触发搜索事件(实时搜索时需要区分这两种方式)\n     */\n    insetSearch(): void;\n    /**\n     * 提供给组件内部的直接触发到外部的搜索事件\n     */\n    search(): Promise<string | void>;\n    /** 删除内部无引用的字段 */\n    removeUnreferencedField(field: string): void;\n}\nexport function defineProvideValue<T extends ProvideValue>(option: T) {\n    return option;\n}\n\n/** 子组件需暴露出来的公共属性 */\nexport interface CommonMethod {\n    /** 重置 */\n    reset(): void;\n    /** 更新父级中 query 的值 */\n    updateWrapperQuery(): void;\n    /** 校验方法 */\n    validator?(query: Record<string, string>): Promise<any> | any;\n    /** 获取该组件拼接的参数 */\n    getQuery(): Record<string, any>;\n}\nexport function defineCommonMethod<T extends CommonMethod>(option: T): T {\n    return option;\n}\n","import { del, getCurrentInstance, onBeforeUnmount, provide, ExtractPropTypes, ref, set, watch, toRefs } from 'vue-demi';\nimport { IS_COMPOSITION_VERSION, provideKey, ProvideValue, CommonMethod, defineProvideValue } from '../constant';\nimport { wrapperProps } from './props';\n\n/** 外部需传递的 props */\nexport type WrapperProps = ExtractPropTypes<typeof wrapperProps> & {\n    /** 触发搜索事件 */\n    search?: (params: Record<string, any>) => void;\n    /** 触发重置事件 */\n    reset?: (params: Record<string, any>) => void;\n};\n\n/** 封装 wrapper 组件必备的信息 */\nexport function useWrapper(props: WrapperProps) {\n    const child: CommonMethod[] = [];\n    onBeforeUnmount(() => child.splice(0));\n\n    /**\n     * #fix 修复初始 backfill 存在值时\n     * query 未保持一致的问题\n     * 解决方案:\n     * query 本身逻辑和作用不变\n     * 新增一个对象用来缓存更改的值\n     * 并在获取 query 时, 将该对象作为\n     * 最后一个合并项\n     */\n    const changedQueryObj = {} as Record<string, any>;\n    /** 是否标记更新的字段, 防止卸载后的空字段占位 */\n    let isLogField = false;\n    let logFields: string[] = [];\n    /** 提供给子条件组件的方法 */\n    const wrapperInstance = defineProvideValue({\n        realtime: ref(props.realtime),\n        register(compOption) {\n            child.push(compOption);\n            const unregister = () => {\n                isLogField = true;\n                compOption.reset();\n                compOption.updateWrapperQuery();\n                const idx = child.indexOf(compOption);\n                idx !== -1 && child.splice(idx, 1);\n                props.searchAtDatumChanged && search();\n                // TODO 不确定的一点, 数据源更改后是否需要重置整个数据\n                // 如果需要重置, 得更新后第一次搜索事件时传递的搜索值\n                isLogField = false;\n                logFields.forEach((k) => {\n                    del(query.value, k);\n                    delete changedQueryObj[k];\n                });\n                logFields = [];\n            };\n            const childInstance = getCurrentInstance();\n            // vue2.7 实例挂载在 proxy 上, 内部逻辑取的 proxy 上的值\n            // 虽然 @vue/composition-api 实例挂载在 proxy 上\n            // 但是内部逻辑取的是整个 getCurrentInstance\n            // @ts-expect-error vue2.7中取proxy属性\n            childInstance && onBeforeUnmount(unregister, IS_COMPOSITION_VERSION ? childInstance.proxy : childInstance);\n            return unregister;\n        },\n        updateQueryValue(field, value) {\n            if (isLogField) logFields.push(field);\n            set(query.value, field, value);\n            changedQueryObj[field] = value;\n        },\n        insetSearch() {\n            props.realtime && search();\n        },\n        search,\n        removeUnreferencedField(field: string) {\n            let sameFieldCount = 0;\n            child.some((v) => {\n                v.getQuery().hasOwnProperty(field) && (sameFieldCount += 1);\n                return sameFieldCount;\n            });\n            if (!sameFieldCount) {\n                del(query.value, field);\n                delete changedQueryObj[field];\n            }\n        },\n    });\n    provide<ProvideValue>(provideKey, wrapperInstance);\n\n    /** 内部条件最新的值, 在没触发搜索按钮前, 不会同步到外部 */\n    const query = ref<Record<string, string>>({ ...props.backfill });\n    const getQuery = () => ({ ...query.value, ...props.backfill, ...changedQueryObj });\n\n    async function search() {\n        const msg = await validate();\n        msg ? props.toast?.(msg) : props.search?.(getQuery());\n    }\n    /** 重置所有条件的值 */\n    function reset() {\n        child.forEach((v) => {\n            v.reset();\n            v.updateWrapperQuery();\n        });\n        props.reset?.(getQuery());\n    }\n    /** 自定义校验条件的值 */\n    async function validate() {\n        const r = await Promise.all(child.map((v) => v.validator?.(query.value)));\n        return r.find((v) => v && typeof v === 'string') as string;\n    }\n\n    return {\n        child,\n        wrapperInstance,\n        query,\n        getQuery,\n        search,\n        reset,\n        validate,\n    };\n}\n","import { PropType } from 'vue-demi';\n\n/** 条件容器 props */\nexport const wrapperProps = {\n    /** 是否在数据发生变动后实时触发搜索事件 */\n    realtime: { type: Boolean as PropType<boolean>, default: undefined },\n    /** 是否在数据源发生改变后触发一次搜索事件 */\n    searchAtDatumChanged: { type: Boolean as PropType<boolean>, default: undefined },\n    /** 回填信息 */\n    backfill: { type: Object as PropType<Record<string, any>> },\n    /** 校验失败时产生的提示 */\n    toast: { type: Function as PropType<(msg: string) => void>, default: undefined },\n} as const;\n","import { markRaw, VNode } from 'vue-demi';\n\n/**\n * 空值转为提供的默认值\n * @param {*} val 值为空时转为默认值\n * @param {*} defaultVal\n */\nexport function emptyToValue<T extends unknown>(val: any, defaultVal: T) {\n    if (Array.isArray(val)) return val.filter(Boolean).length ? val : defaultVal;\n    return typeof val === 'number' ? val : val || defaultVal;\n}\n\n/**\n * 获取指定层级的父级(包括自身)\n * @param {Record<string, any>[]} data 数据源\n * @param {(item) => boolean} cb 当前数据项是否匹配\n */\nexport function getChained<T extends Record<string, any>>(\n    data: T[],\n    cb: (item: T) => boolean,\n    childrenKey = 'children',\n): T[] {\n    for (const item of data) {\n        if (cb(item)) {\n            return [item];\n        } else if (item[childrenKey]?.length) {\n            const r = getChained(item[childrenKey], cb);\n            if (r.length) {\n                r.unshift(item);\n                return r;\n            }\n        }\n    }\n    return [];\n}\n\n/**\n * 获取渲染节点\n * @param {string | Object | Function} node 需渲染元素\n */\nexport function getNode(node: string | ((...args: any[]) => VNode) | VNode, ...args: any[]) {\n    return typeof node === 'function' ? node(...args) : typeof node === 'string' ? node : markRaw(node);\n}\n","import { ref, watch, onBeforeUnmount, ExtractPropTypes, nextTick, computed } from 'vue-demi';\nimport { CommonMethod } from './constant';\nimport { commonProps } from './share';\n\n/** 获取条件的初始值 */\nexport function useInitialValue<T extends ExtractPropTypes<Readonly<typeof commonProps>>>(props: T) {\n    const setValue = ref<any>();\n    const a = computed({\n        set(value: any) {\n            setValue.value = value;\n        },\n        get() {\n            return setValue.value === undefined\n                ? props.defaultValue !== undefined\n                    ? typeof props.defaultValue === 'function'\n                        ? props.defaultValue(props.query, props.backfill)\n                        : props.defaultValue\n                    : undefined\n                : setValue.value;\n        },\n    });\n    return a;\n}\n\n/**\n * 获取当前组件的显示和隐藏状态\n */\nexport function useDisplay<T extends ExtractPropTypes<Readonly<typeof commonProps>>>(props: T, option: CommonMethod) {\n    const insetDisabled = ref(typeof props.disabled === 'boolean' ? props.disabled : false);\n    const insetHide = ref(typeof props.hide === 'boolean' ? props.hide : false);\n    const getOption = () => ({ query: props.query, backfill: props.backfill, option });\n    const cb = () => {\n        if (typeof props.hide === 'function') {\n            const currentValue = insetHide.value;\n            const newValue = props.hide(getOption());\n            if (currentValue !== newValue) {\n                insetHide.value = props.hide(getOption());\n            }\n        } else if (typeof props.disabled === 'function') {\n            const currentValue = insetDisabled.value;\n            const newValue = props.disabled(getOption());\n            if (currentValue !== newValue) {\n                insetDisabled.value = props.disabled(getOption());\n            }\n        }\n    };\n    let isChanged = false;\n    let listeners = [\n        watch(() => props.query, cb, { immediate: true, deep: true }),\n        watch(\n            () => [props.disabled, props.hide],\n            (val, val2) => {\n                if (val[0] !== val2[0]) {\n                    insetDisabled.value = typeof val[0] === 'boolean' ? val[0] : false;\n                    typeof val[0] === 'function' && (isChanged = true);\n                }\n                if (val[1] !== val2[1]) {\n                    insetHide.value = typeof val[1] === 'boolean' ? val[1] : false;\n                    typeof val[1] === 'function' && (isChanged = true);\n                }\n                cb();\n                isChanged = false;\n            },\n        ),\n    ];\n    onBeforeUnmount(() => (listeners.forEach((o) => o()), (listeners = [])));\n    return { insetDisabled, insetHide };\n}\n\n/**\n * 转换当前事件循环内更新标识\n * @param {boolean} initialValue 初始状态\n */\nexport function useDisableInCurrentCycle(initialValue = true) {\n    /** 是否允许改变 */\n    const flag = ref(initialValue);\n    /** 禁止改变 */\n    const updateFlag = () => {\n        flag.value = !initialValue;\n        nextTick(() => {\n            flag.value = initialValue;\n        });\n    };\n    return { flag, updateFlag };\n}\n","import { ExtractPropTypes, computed, inject, onBeforeUnmount, PropType, ref, watch, watchEffect } from 'vue-demi';\nimport { emptyToValue } from '../../utils/index';\nimport { CommonMethod, defineCommonMethod, provideKey, ProvideValue } from '../constant';\nimport { useDisplay, useDisableInCurrentCycle, useInitialValue } from '../assist';\nimport { plainProps } from './props';\n\n/** 外部需传递的 props */\nexport type PlainProps = ExtractPropTypes<typeof plainProps>;\n\n/** 空值转字符串(去除空值不一致导致 formItem.rules 校验) */\nfunction emptyValue2Str(val?: string | number | undefined | null | any[]) {\n    return val?.toString() ?? '';\n}\n\n/** 封装扁平组件必备的信息 */\nexport function usePlain(props: PlainProps) {\n    /** 容器注入值 */\n    const wrapper = inject<ProvideValue>(provideKey);\n    /** 初始值(重置时回填的值) */\n    const initialValue = useInitialValue(props);\n    /** 初始是否存在回填值 */\n    const initialBackfillValue =\n        props.backfill &&\n        (props.fields?.length\n            ? // 防止回填值不存在时产生一个空数组(undefined[])\n              props.fields.map((key) => props.backfill![key]).filter(Boolean)\n            : props.backfill[props.field]);\n    /** 当前选中值 */\n    const checked = ref<string | string[]>(\n        initialBackfillValue ||\n            (props.defaultValue !== undefined ? initialValue.value : props.multiple ? [] : '')\n                // 防止数组引用导致默认值发生改变\n                .slice(),\n    );\n    /** 远程获取的数据源 */\n    const remoteOption = ref<Record<string, any>[]>([]);\n    /** 渲染的数据源(远程数据源 > 本地数据源) */\n    const finalOption = computed(() => (remoteOption.value.length ? remoteOption.value : props.options));\n    const getQuery = () => {\n        if (props.customGetQuery) return props.customGetQuery(checked.value, emptyToValue, props);\n        return props.multiple && props.fields\n            ? props.fields.reduce(\n                  (p, k, i) => ((p[k] = emptyToValue(checked.value?.[i], props.emptyValue)), p),\n                  {} as Record<string, any>,\n              )\n            : { [props.field]: emptyToValue(checked.value, props.emptyValue) };\n    };\n    // 防止触发搜索时, query 产生变化内部重复赋值\n    const { flag: realtimeFlag, updateFlag: updateRealtimeFlag } = useDisableInCurrentCycle();\n    // 防止触发搜索时, backfill 产生变化内部重复赋值\n    const { flag: backfillFlag, updateFlag: updateBackfillFlag } = useDisableInCurrentCycle();\n\n    const option = defineCommonMethod({\n        reset() {\n            const { multiple } = props;\n            updateRealtimeFlag();\n            updateBackfillFlag();\n            checked.value = (props.resetToInitialValue && initialValue.value?.slice()) || (multiple ? [] : '');\n        },\n        updateWrapperQuery() {\n            updateRealtimeFlag();\n            wrapper && Object.entries(getQuery()).forEach(([k, v]) => wrapper.updateQueryValue(k, v));\n        },\n        get validator() {\n            return props.validator;\n        },\n        getQuery,\n    });\n\n    wrapper?.register(option);\n    const { insetDisabled, insetHide } = useDisplay(props, option);\n    /** 不存在回填值且存在默认值时更新父级中的值 */\n    if (!initialBackfillValue && props.defaultValue) {\n        option.updateWrapperQuery();\n    }\n\n    const unwatchs: (() => void)[] = [];\n    onBeforeUnmount(() => unwatchs.forEach((v) => v()));\n\n    // 提交字段发生改变时, 删除原有字段并更新最新值\n    unwatchs.push(\n        watch(\n            () => props.field,\n            (val, oldVal) => {\n                val !== oldVal && wrapper?.removeUnreferencedField(oldVal);\n                option.updateWrapperQuery();\n            },\n        ),\n    );\n    // 实时值发生变化时触发更新 - 共享同一个字段\n    unwatchs.push(\n        watch(\n            () =>\n                [\n                    props.fields || props.field,\n                    props.fields ? props.fields.map((k) => props.query[k]).filter(Boolean) : props.query[props.field],\n                ] as const,\n            // [props.field, props.query[props.field]] as const,\n            ([_field, val], [__field]) => {\n                const _val = props.backfillToValue(val, _field, props.query);\n                // 仅在值发生变化时同步 忽视空值不一致的问题\n                if (_field.toString() !== __field.toString() || emptyValue2Str(_val) === emptyValue2Str(checked.value))\n                    return;\n                if (!realtimeFlag.value) return;\n                checked.value = _val;\n            },\n        ),\n    );\n    // 回填值发生变化时触发更新\n    unwatchs.push(\n        watch(\n            () =>\n                [\n                    props.fields || props.field,\n                    props.fields\n                        ? props.fields.map((k) => props.backfill?.[k]).filter(Boolean)\n                        : props.backfill?.[props.field],\n                ] as const,\n            ([_field, val], [__field]) => {\n                // 存在回填值时回填, 不存在时不做改动\n                const _val = props.backfillToValue(val, _field, props.backfill);\n                if (_field.toString() !== __field.toString() || emptyValue2Str(_val) === emptyValue2Str(checked.value))\n                    return;\n                updateBackfillFlag();\n                updateCheckedValue(_val);\n            },\n        ),\n    );\n    // 存在依赖项\n    unwatchs.push(\n        watch(\n            () =>\n                [\n                    props.depend,\n                    props.dependFields,\n                    (props.dependFields &&\n                        ([] as string[])\n                            .concat(props.dependFields)\n                            .map((k) => props.query?.[k])\n                            .join(',')) ||\n                        '',\n                ] as const,\n            ([_depend, _dependFields, val], [__depend, __dependFields, oldVal]) => {\n                if (!backfillFlag.value) return;\n                if (val === oldVal) return;\n                getOption('depend');\n                // 更新依赖条件时不做改动\n                if (_depend !== __depend || _dependFields?.toString() !== __dependFields?.toString()) return;\n                if (checked.value === undefined || checked.value.toString() === '') return;\n                updateCheckedValue(props.multiple ? [] : '');\n            },\n        ),\n    );\n    unwatchs.push(watch(() => props.getOptions, getOption.bind(null, 'initial'), { immediate: true }));\n\n    /** 获取数据源发生变化事件 */\n    function getOption(trigger: 'initial' | 'depend') {\n        props.getOptions?.(\n            (data) => {\n                const _checked = checked.value;\n                // 重置 checked, 防止增加 option 后, select 值没更新的问题\n                checked.value = undefined as any;\n                remoteOption.value = data || [];\n                checked.value = _checked;\n            },\n            props.query || {},\n            {\n                trigger,\n                change: (value: any, isInitial?: boolean) => {\n                    isInitial && (initialValue.value = value);\n                    change(value);\n                },\n                search: (value: any, isInitial?: boolean) => {\n                    isInitial && (initialValue.value = value);\n                    updateCheckedValue(value);\n                    wrapper?.search();\n                },\n            },\n        );\n    }\n    /**\n     * 更新选中值(父级也同步更改)\n     * @param {string | string[]} value 待更改的值\n     */\n    function updateCheckedValue(value: string | string[]) {\n        if (value === checked.value) return;\n        checked.value = value;\n        option.updateWrapperQuery();\n    }\n    /**\n     * 更新选中值并触发内部搜索事件\n     * @param {string | string[]} value 待更改的值\n     */\n    function change(value: string | string[]) {\n        updateCheckedValue(value);\n        wrapper?.insetSearch();\n    }\n\n    return {\n        wrapper,\n        option,\n        checked,\n        getQuery,\n        insetDisabled,\n        insetHide,\n        finalOption,\n        updateCheckedValue,\n        change,\n        reset: option.reset,\n    };\n}\n","import { type PropType } from 'vue-demi';\nimport { type CommonMethod } from './constant';\nimport { type emptyToValue as EmptyToValue } from '../utils/index';\n\n/** 隐藏元素 */\nexport type HideOption =\n    | boolean\n    | ((query: {\n          /** 实时 query */\n          query: Record<string, any>;\n          /** 回填值 query */\n          backfill?: Record<string, any>;\n          /** 当前组件暴露给父级的选项 */\n          option: CommonMethod;\n      }) => any);\n\n/** 获取远程数据源 */\nexport interface GetOptions {\n    (\n        /** 数据执行后的回调 */\n        cb: (data: Record<string, any>[]) => void,\n        /** 当前 query 对象 */\n        query: Record<string, any>,\n        /** 额外的配置项 */\n        option: TriggerOption,\n    ): any;\n}\n\n/** 条件值可能的类型 */\nexport type ValueType = string | string[];\n\n/** 改变当前条件值触发方式 */\nexport interface TriggerOption {\n    /**\n     * 触发来源\n     * @enum {('initial'|'depend')} initial(初始化), depend(依赖项改变)\n     */\n    trigger: string;\n    /**\n     * 仅改变内部的值, 不触发搜索事件\n     * @param {*} value 需改变的值\n     * @param {boolean} [updateInitialValue] 是否将该值作为初始值(重置时使用)\n     */\n    change(value: any, updateInitialValue?: boolean): void;\n    /**\n     * 触发搜索事件\n     * @param {*} value 需改变的值\n     * @param {boolean} [updateInitialValue] 是否将该值作为初始值(重置时使用)\n     */\n    search(value: any, updateInitialValue?: boolean): void;\n}\n\n/** 自定义返回字段 */\nexport type GetQuery = (\n    value: any | any[],\n    emptyToValue: typeof EmptyToValue,\n    props: Record<string, any>,\n) => Record<string, any>;\n\n/** 公共 props */\nexport const commonProps = {\n    /** 提交的字段 */\n    field: { type: String as PropType<string>, required: true },\n    /** 当前条件对象 - 实时变化 */\n    query: { type: Object as PropType<Record<string, any>>, required: true },\n    /** 回填值的对象 - 非实时变化 */\n    backfill: { type: Object as PropType<Record<string, any>> },\n    /** 禁用状态 */\n    disabled: { type: [Boolean, Function] as PropType<HideOption> },\n    /** 是否隐藏 -> 如果是函数, 需传递依赖项, 可根据依赖项动态隐藏 */\n    hide: { type: [Boolean, Function] as PropType<HideOption> },\n    /** 是否依赖其它字段 */\n    depend: { type: Boolean as PropType<boolean> },\n    /** 依赖字段 */\n    dependFields: { type: [String, Array] as PropType<string | string[]> },\n    /** 重置时是否置为初始值 */\n    resetToInitialValue: { type: [Boolean] as PropType<boolean> },\n    /** 空置时提交的值 - 默认置为 undefined */\n    emptyValue: { type: [String, Number, null, undefined] as PropType<undefined | null | string | number> },\n    /** 校验函数, 返回字符串不通过, 会触发提示 - 提交时触发 */\n    validator: {\n        type: [Function] as PropType<\n            ((query: Record<string, any>) => any) | ((query: Record<string, any>) => Promise<any>)\n        >,\n    },\n    /** 自定义返回字段 */\n    customGetQuery: { type: Function as PropType<GetQuery> },\n    /** 设置默认值 */\n    defaultValue: {\n        type: [String, Array, Function] as PropType<\n            ValueType | ((query: Record<string, any>, backfill?: Record<string, any>) => ValueType)\n        >,\n    },\n} as const;\n","import { PropType } from 'vue-demi';\nimport { commonProps, type GetOptions } from '../share';\n\n/** 扁平条件类 props */\nexport const plainProps = {\n    ...commonProps,\n    /** 字段集(多选时, 每个下标对应的字段可能不一样) */\n    fields: { type: [Array] as PropType<string[]> },\n    /** 多字段时转换成选中值 */\n    backfillToValue: {\n        type: Function as PropType<\n            (values: string | string[], fields: string | string[], backfill?: Record<string, any>) => string | string[]\n        >,\n        default: (v: any) => v,\n    },\n    /** 是否多选 */\n    multiple: { type: Boolean as PropType<boolean>, default: undefined },\n    /** 数据源 */\n    options: { type: Array as PropType<Record<string, any>[]>, default: () => [] },\n    /** 动态获取数据源 */\n    getOptions: { type: Function as PropType<GetOptions> },\n} as const;\n","import { computed, ExtractPropTypes, inject, onBeforeUnmount, PropType, ref, watch, nextTick } from 'vue-demi';\nimport { emptyToValue, getChained } from '../../utils/index';\nimport { defineCommonMethod, provideKey, ProvideValue } from '../constant';\nimport { useDisplay, useDisableInCurrentCycle, useInitialValue } from '../assist';\nimport { treeProps } from './props';\n\n/** 选中值类型 */\ntype ValueType = string | number | null | undefined;\n/** 外部需传递的 props */\nexport type TreeProps = ExtractPropTypes<typeof treeProps>;\n\n/** 空值转字符串(去除空值不一致导致 formItem.rules 校验) */\nfunction emptyValue2Str(val?: string | number | undefined | null | any[]) {\n    return val?.toString() ?? '';\n}\n\n/** 封装 tree 组件必备的信息 */\nexport function useTree(props: TreeProps) {\n    /** 容器注入值 */\n    const wrapper = inject<ProvideValue>(provideKey);\n    /** 初始值(重置时回填的值) */\n    const initialValue = useInitialValue(props);\n    /** 当前选中值 */\n    const checked = ref<ValueType[]>([]);\n    /** 远程获取的数据源 */\n    const remoteOption = ref<Record<string, any>[]>([]);\n    /** 渲染的数据源(远程数据源 > 本地数据源) */\n    const finalOption = computed(() => (remoteOption.value.length ? remoteOption.value : props.options));\n    /** 获取当前条件所拥有的值 */\n    const getQuery = () => {\n        // 未初始化且不存在默认值时不返回查询值\n        if (!sourceIsInit.value && !initialValue.value) return {};\n        if (props.customGetQuery) return props.customGetQuery(checked.value, emptyToValue, props);\n        return props.fields?.length\n            ? props.fields.reduce(\n                  (p, v, i) => Object.assign(p, { [v]: emptyToValue(checked.value[i], props.emptyValue) }),\n                  {},\n              )\n            : {\n                  [props.field]: emptyToValue(\n                      props.emitPath ? [...checked.value] : checked.value.slice(-1)[0],\n                      props.emptyValue,\n                  ),\n              };\n    };\n    // 防止触发搜索时, query 产生变化内部重复赋值\n    const { flag: realtimeFlag, updateFlag: updateRealtimeFlag } = useDisableInCurrentCycle();\n    // 防止触发搜索时, `backfill` 产生变化内部重复赋值\n    const { flag: backfillFlag, updateFlag: updateBackfillFlag } = useDisableInCurrentCycle();\n\n    /** 需暴露给父级操作 */\n    const option = defineCommonMethod({\n        reset() {\n            updateRealtimeFlag();\n            updateBackfillFlag();\n            checked.value = (props.resetToInitialValue && initialValue.value?.slice()) || [];\n            return this;\n        },\n        get validator() {\n            return props.validator;\n        },\n        updateWrapperQuery() {\n            updateRealtimeFlag();\n            wrapper && Object.entries(getQuery()).forEach(([k, v]) => wrapper.updateQueryValue(k, v));\n        },\n        getQuery,\n    });\n\n    wrapper?.register(option);\n    const { insetDisabled, insetHide } = useDisplay(props, option);\n\n    const unwatchs: (() => void)[] = [];\n    onBeforeUnmount(() => unwatchs.forEach((v) => v()));\n\n    const sourceIsInit = ref(typeof props.getOptions !== 'function' || !!props.fields?.length);\n    watch(sourceIsInit, (val) => val && initCheckedInfo(), { immediate: true });\n    /** 设置初次选中的值以及初始值 */\n    function initCheckedInfo() {\n        const { backfill: BACKFILL, field: FIELD, fields: FIELDS } = props;\n        if (BACKFILL) {\n            // 存在回填值且回填值中对应字段为真\n            // 则设置回填值并不处理后续逻辑\n            if (FIELDS) {\n                const r = FIELDS.reduce((p, v) => {\n                    BACKFILL[v] && p.push(BACKFILL[v]);\n                    return p;\n                }, [] as string[]);\n                if (r.length) {\n                    checked.value = r;\n                    option.updateWrapperQuery();\n                    return;\n                }\n            } else if (BACKFILL[FIELD]) {\n                checked.value = insideGetChained(BACKFILL[FIELD]);\n                option.updateWrapperQuery();\n                return;\n            }\n        }\n        // 不存在回填值, 看是否存在初始值\n        // 存在设置默认值\n        if (initialValue.value?.length) {\n            checked.value =\n                typeof initialValue.value === 'string'\n                    ? insideGetChained(initialValue.value)\n                    : initialValue.value.slice();\n            typeof initialValue.value === 'string' && (initialValue.value = checked.value.slice());\n            option.updateWrapperQuery();\n        }\n    }\n\n    // 提交字段发生改变时, 删除原有字段并更新最新值\n    unwatchs.push(\n        watch(\n            () => props.fields || [props.field],\n            (val, oldVal) => {\n                val.toString() !== oldVal.toString() &&\n                    wrapper &&\n                    oldVal.forEach((o) => val.includes(o) || wrapper.removeUnreferencedField(o));\n\n                option.updateWrapperQuery();\n            },\n        ),\n    );\n    // 实时值发生变化时触发更新 - 共享同一个字段\n    unwatchs.push(\n        watch(\n            () =>\n                [\n                    props.fields?.toString() || props.field,\n                    props.fields?.map((v) => props.query[v]).filter(Boolean) || props.query[props.field],\n                ] as const,\n            ([_field, val], [__field, oldVal]) => {\n                // 仅在值发生变化时同步\n                if (_field !== __field || emptyValue2Str(val) === emptyValue2Str(oldVal)) return;\n                if (!realtimeFlag.value) return;\n                checked.value = typeof val === 'string' ? insideGetChained(val) : val;\n            },\n        ),\n    );\n    // 回填值发生变化时触发更新\n    unwatchs.push(\n        watch(\n            () =>\n                props.fields?.length\n                    ? props.fields.reduce((p, k) => {\n                          props.backfill?.[k] && p.push(props.backfill[k]);\n                          return p;\n                      }, [] as string[])\n                    : props.backfill?.[props.field],\n            (value: ValueType | ValueType[], oldVal: ValueType | ValueType[]) => {\n                if (!sourceIsInit.value) return;\n                if (emptyValue2Str(value) === emptyValue2Str(oldVal)) return;\n                updateBackfillFlag();\n                if (Array.isArray(value)) {\n                    updateCheckedValue(value);\n                } else {\n                    if (!value && value !== 0) {\n                        checked.value.length && (checked.value = []);\n                        return;\n                    }\n                    updateCheckedValue(insideGetChained(value));\n                }\n            },\n        ),\n    );\n    // 存在依赖项\n    unwatchs.push(\n        watch(\n            () =>\n                [\n                    props.depend,\n                    props.dependFields,\n                    (props.dependFields &&\n                        ([] as string[])\n                            .concat(props.dependFields)\n                            .map((k) => props.query?.[k])\n                            .join(',')) ||\n                        '',\n                ] as const,\n            ([_depend, _dependFields, val], [__depend, __dependFields, oldVal]) => {\n                if (!backfillFlag.value) return;\n                if (val === oldVal) return;\n                getOption('depend');\n                // 更新依赖条件时不做改动\n                if (_depend !== __depend || _dependFields?.toString() !== __dependFields?.toString()) return;\n                if (!checked.value.length) return;\n                updateCheckedValue(typeof checked.value === 'string' ? '' : []);\n            },\n        ),\n    );\n    unwatchs.push(watch(() => props.getOptions, getOption.bind(null, 'initial'), { immediate: true }));\n\n    /** 获取数据源发生变化事件 */\n    function getOption(trigger: 'initial' | 'depend') {\n        props.getOptions?.(\n            (data) => {\n                remoteOption.value = data || [];\n                sourceIsInit.value = true;\n            },\n            props.query || {},\n            {\n                trigger,\n                change: (value: any, isInitial?: boolean) => {\n                    isInitial && (initialValue.value = value);\n                    change(value);\n                },\n                search: (value: any, isInitial?: boolean) => {\n                    isInitial && (initialValue.value = value);\n                    updateCheckedValue(value);\n                    wrapper?.search();\n                },\n            },\n        );\n    }\n    /**\n     * 更新选中值(父级也同步更改)\n     * @param {ValueType | ValueType[]} values 待更改的值\n     */\n    function updateCheckedValue(values: ValueType[] | ValueType) {\n        const _checked = Array.isArray(values) ? values : insideGetChained(values);\n        if (_checked.join('') === checked.value.join('')) return;\n        checked.value = _checked;\n        option.updateWrapperQuery();\n    }\n    /**\n     * change 事件\n     * @param {Array} values 待更改的值\n     */\n    function change(values: ValueType[] | ValueType) {\n        updateCheckedValue(values || []);\n        wrapper?.insetSearch();\n    }\n    /**\n     * 根据提供的值获取其祖先(包括自身)\n     */\n    function insideGetChained(val: ValueType) {\n        if (!val && val !== 0) return [];\n        const { valueKey, childrenKey } = props;\n        return getChained(finalOption.value, (item) => item[valueKey] === val)\n            .map((v) => v[valueKey], childrenKey)\n            .filter(Boolean);\n    }\n\n    return {\n        wrapper,\n        option,\n        checked,\n        getQuery,\n        finalOption,\n        insetDisabled,\n        insetHide,\n        change,\n        reset: option.reset,\n    };\n}\n","import { PropType } from 'vue-demi';\nimport { commonProps, type GetOptions } from '../share';\n\n/** 树形条件类 props */\nexport const treeProps = {\n    ...commonProps,\n    /** 不同层级返回不同的字段(可能存在的字段, 不传初始不会回填数据) */\n    fields: { type: [Array] as PropType<string[]> },\n    /** 提交给后端的字段 */\n    valueKey: { type: String as PropType<string>, required: true },\n    /** 子级键名 - 默认 children */\n    childrenKey: { type: String as PropType<string> },\n    /** 是否返回选中项中所有的值(数组形式), 否只返回最后一项(基础类型) */\n    emitPath: { type: [Boolean] as PropType<boolean>, default: false },\n    /** 下拉选项的数据源 */\n    options: { type: Array as PropType<Record<string, any>[]>, default: () => [] },\n    /** 获取数据源 */\n    getOptions: { type: Function as PropType<GetOptions> },\n} as const;\n"],"names":["IS_COMPOSITION_VERSION","version","slice","provideKey","defineProvideValue","option","defineCommonMethod","useWrapper","props","child","onBeforeUnmount","splice","changedQueryObj","isLogField","logFields","wrapperInstance","realtime","ref","register","compOption","push","unregister","reset","updateWrapperQuery","idx","indexOf","searchAtDatumChanged","search","forEach","k","del","query","value","childInstance","getCurrentInstance","proxy","updateQueryValue","field","set","insetSearch","removeUnreferencedField","sameFieldCount","some","v","getQuery","hasOwnProperty","provide","backfill","msg","validate","toast","r","Promise","all","map","validator","find","wrapperProps","type","Boolean","default","undefined","Object","Function","emptyToValue","val","defaultVal","Array","isArray","filter","length","getChained","data","cb","childrenKey","item","unshift","getNode","node","args","markRaw","useInitialValue","setValue","a","computed","get","defaultValue","useDisplay","insetDisabled","disabled","insetHide","hide","getOption","currentValue","newValue","listeners","watch","immediate","deep","val2","o","useDisableInCurrentCycle","initialValue","flag","updateFlag","nextTick","emptyValue2Str","toString","usePlain","wrapper","inject","initialBackfillValue","fields","key","checked","multiple","remoteOption","finalOption","options","customGetQuery","reduce","p","i","emptyValue","realtimeFlag","updateRealtimeFlag","backfillFlag","updateBackfillFlag","resetToInitialValue","entries","unwatchs","oldVal","_field","__field","_val","backfillToValue","updateCheckedValue","depend","dependFields","concat","join","_depend","_dependFields","__depend","__dependFields","getOptions","bind","trigger","_checked","change","isInitial","commonProps","String","required","Number","plainProps","useTree","sourceIsInit","assign","emitPath","initCheckedInfo","BACKFILL","FIELD","FIELDS","insideGetChained","includes","values","valueKey","treeProps"],"mappings":"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"}